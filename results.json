{
	"results": [
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/eks/main.tf",
				"start_line": 7,
				"end_line": 12
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/eks/main.tf",
				"start_line": 24,
				"end_line": 29
			}
		},
		{
			"rule_id": "AVD-AWS-0124",
			"long_id": "aws-ec2-add-description-to-security-group-rule",
			"rule_description": "Missing description for security group rule.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Descriptions provide context for the firewall rule reasons",
			"resolution": "Add descriptions for all security groups rules",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/add-description-to-security-group-rule/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule"
			],
			"description": "Security group rule does not have a description.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.efs",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/efs/main.tf",
				"start_line": 33,
				"end_line": 38
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/eks/main.tf",
				"start_line": 28,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/eks/main.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.efs",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/efs/main.tf",
				"start_line": 37,
				"end_line": 37
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/vpc/main.tf",
				"start_line": 28,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/vpc/main.tf",
				"start_line": 28,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/vpc/main.tf",
				"start_line": 28,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/vpc/main.tf",
				"start_line": 2,
				"end_line": 10
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 98,
				"end_line": 98
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 85,
				"end_line": 85
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 71,
				"end_line": 71
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 58,
				"end_line": 58
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 45,
				"end_line": 45
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 31,
				"end_line": 31
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 18,
				"end_line": 18
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 166,
				"end_line": 166
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 152,
				"end_line": 152
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 138,
				"end_line": 138
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 124,
				"end_line": 124
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 111,
				"end_line": 111
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 96,
				"end_line": 107
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 83,
				"end_line": 94
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 69,
				"end_line": 80
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 56,
				"end_line": 67
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 43,
				"end_line": 54
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 29,
				"end_line": 40
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 2,
				"end_line": 13
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 164,
				"end_line": 175
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 16,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 150,
				"end_line": 161
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 136,
				"end_line": 147
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 122,
				"end_line": 133
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecr",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/ecr/main.tf",
				"start_line": 109,
				"end_line": 120
			}
		},
		{
			"rule_id": "AVD-AWS-0039",
			"long_id": "aws-eks-encrypt-secrets",
			"rule_description": "EKS should have the encryption of secrets enabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS secrets could be read if compromised",
			"resolution": "Enable encryption of EKS secrets",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/eks/encrypt-secrets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config"
			],
			"description": "Cluster does not have secret encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/eks/main.tf",
				"start_line": 69,
				"end_line": 94
			}
		},
		{
			"rule_id": "AVD-AWS-0040",
			"long_id": "aws-eks-no-public-cluster-access",
			"rule_description": "EKS Clusters should have the public access disabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be access from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/eks/no-public-cluster-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#endpoint_public_access"
			],
			"description": "Public cluster access is enabled.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/eks/main.tf",
				"start_line": 77,
				"end_line": 77
			}
		},
		{
			"rule_id": "AVD-AWS-0041",
			"long_id": "aws-eks-no-public-cluster-access-to-cidr",
			"rule_description": "EKS cluster should not have open CIDR range for public access",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be accessed from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/eks/no-public-cluster-access-to-cidr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#vpc_config"
			],
			"description": "Cluster allows access from a public CIDR: 0.0.0.0/0.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/eks/main.tf",
				"start_line": 79,
				"end_line": 79
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*::snapshot/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*::snapshot/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*::snapshot/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*::snapshot/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*::snapshot/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*::snapshot/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:CreateTags' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:CreateTags' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:CreateTags' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:CreateTags' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:CreateTags' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:CreateTags' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:RunInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:volume/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:TerminateInstances' on wildcarded resource 'arn:aws-us-gov:ec2:*:*:instance/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.iam",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/iam/main.tf",
				"start_line": 112,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.sqs",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/sqs/main.tf",
				"start_line": 26,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0096",
			"long_id": "aws-sqs-enable-queue-encryption",
			"rule_description": "Unencrypted SQS queue.",
			"rule_provider": "aws",
			"rule_service": "sqs",
			"impact": "The SQS queue messages could be read if compromised",
			"resolution": "Turn on SQS Queue encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/sqs/enable-queue-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sqs_queue#server-side-encryption-sse"
			],
			"description": "Queue is not encrypted",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.sqs",
			"location": {
				"filename": "/Users/gmanipon/dev/srl-idps-govcloud-terraform/modules/sqs/main.tf",
				"start_line": 2,
				"end_line": 23
			}
		}
	]
}
